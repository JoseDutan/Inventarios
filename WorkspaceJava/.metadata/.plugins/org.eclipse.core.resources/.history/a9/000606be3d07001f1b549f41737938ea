package com.krakedev.inventarios.bdd;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;

import com.krakedev.inventarios.entidades.CabeceraVentas;
import com.krakedev.inventarios.entidades.DetallePedido;
import com.krakedev.inventarios.entidades.DetalleVentas;
import com.krakedev.inventarios.entidades.Pedido;
import com.krakedev.inventarios.excepciones.KrakeDevException;
import com.krakedev.inventarios.utils.ConexionBDD;

public class VentasBDD {
	public void insertar(CabeceraVentas venta) throws KrakeDevException {
		Connection con = null;
		PreparedStatement ps = null;
		PreparedStatement psDet = null;
		ResultSet rsClave = null;
		int codigoCabecera = 0;

		Date fechaActual = new Date();
		java.sql.Date fechaSQL = new java.sql.Date(fechaActual.getTime());
		try {
			con = ConexionBDD.obtenerConexion();
			ps = con.prepareStatement("insert into cabecera_ventas(fecha, total_sin_iva, iva, total) "
					+ "values(?, ?, ?, ?);",
					Statement.RETURN_GENERATED_KEYS);
			ps.setDate(1, fechaSQL);
			ps.setBigDecimal(2, venta.getTotalSiniva());
			ps.setBigDecimal(3, venta.getIva());
			ps.setBigDecimal(4, venta.getTotal());

			ps.executeUpdate();

			rsClave = ps.getGeneratedKeys();
			if (rsClave.next()) {
				codigoCabecera = rsClave.getInt(1);
			}

			ArrayList<DetalleVentas> detallesVenta = venta.getDetalles();
			DetalleVentas det;
			for (int i = 0; i < detallesVenta.size(); i++) {
				det = detallesVenta.get(i);
				psDet = con.prepareStatement(
						"insert into detalle_de_ventas(cabecera_ventas, producto, cantidad, precio_venta, subtotal, subtatal_con_iva)"
						+ "values(?, ?, ?, ?, ?, ?);");
				psDet.setInt(1, codigoCabecera);
				psDet.setInt(2, det.getProducto().getCodigo());
				psDet.setInt(3, det.getCantidad());
				psDet.setBigDecimal(4, det.getPrecioVenta());
				psDet.setBigDecimal(5, det.getSubtotal());
				psDet.setBigDecimal(6, det.getSubtotalConIva());
				
				psDet.executeUpdate();
			}

		} catch (KrakeDevException e) {
			e.printStackTrace();
			throw e;
		} catch (SQLException e) {
			e.printStackTrace();
			throw new KrakeDevException("Error al consultar. Detalle: " + e.getMessage());
		}
	}
	
	public void actualizar(CabeceraVentas venta) throws KrakeDevException {
		Connection con = null;
		PreparedStatement ps = null;
		PreparedStatement psDet = null;
		PreparedStatement psHis = null;
		
		Date fechaActual = new Date();
		Timestamp fechaHoraActual = new Timestamp(fechaActual.getTime());
		try {
			con = ConexionBDD.obtenerConexion();
			
			ps = con.prepareStatement("UPDATE cabecera_ventas SET total_sin_iva = ?, iva = ?, total = ? WHERE codigo = ?");
			ps.setBigDecimal(1, venta.getTotalSiniva());
			ps.setBigDecimal(2, venta.getIva());
			ps.setBigDecimal(3, venta.getTotal());
			ps.executeUpdate();

			ArrayList<DetalleVentas> detallesPedido = venta.getDetalles();
			DetallePedido det;
			for (int i = 0; i < detallesPedido.size(); i++) {
				det = detallesPedido.get(i);
				psDet = con.prepareStatement(
						"update detalle_pedido set cantidad_recibida = ?, subtotal = ? where codigo = ?");
				psDet.setInt(1, det.getCantidadRecibida());
				BigDecimal pv = det.getProducto().getPrecioVenta();
				BigDecimal cantidad = new BigDecimal(det.getCantidadRecibida());
				BigDecimal subtotal = pv.multiply(cantidad);
				psDet.setBigDecimal(2, subtotal);
				psDet.setInt(3, det.getCodigo());
				
				psDet.executeUpdate();
				
			 psHis = con.prepareStatement("insert into historial_stock(fecha, referencia, producto, cantidad) "
			 		+ "values(?, ?, ?, ?)");
			 psHis.setTimestamp(1, fechaHoraActual);
			 psHis.setString(2, "PEDIDO "+pedido.getNumero());
			 psHis.setInt(3, det.getProducto().getCodigo());
			 psHis.setInt(4, det.getCantidadRecibida());
			 
			 psHis.executeUpdate();
			}

		} catch (KrakeDevException e) {
			e.printStackTrace();
			throw e;
		} catch (SQLException e) {
			e.printStackTrace();
			throw new KrakeDevException("Error al Actualizar. Detalle: " + e.getMessage());
		}
	}
}
